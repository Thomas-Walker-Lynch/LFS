#!/bin/bash
# This might require sudo_LFS depending on the stage in the build that it is run at.
# This is dangerous. This is the kind of thing that causes a person to use an emulated m1 machine.
set -x
set -e

if [[ -z "$LFS_M2_FILESYSTEM" ]];then
  echo $(basename "$0") " requires that \$LFS_M2_FILESYSTEM has a value" > /dev/stderr
  exit 1
fi

# run m2_wipe as root so that umount will work and rm of files works even when the files are owned by root
# this is an excellent script for wiping your host computer by accident!
if [ "$EUID" -ne 0 ]; then
  echo $(basename "$0") "not being run as root, so can't do unounts, we stop scanning upon reaching the first error" > /dev/stderr
fi

read -p "Remove all files except package/ on $LFS_M2_FILESYSTEM? [y|n]:" -n 1 -r
echo    # (optional) move to a new line
if [[ ! "$REPLY" =~ ^[y]$ ]];then
  exit 1
fi

# found that the absolute pathname is necessary, independent of the current pwd
umount /mnt/m2_filesystem/mnt/Lustucru || true
rmdir /mnt/m2_filesystem/mnt/Lustucru || true

umount /mnt/m2_filesystem/dev || true
umount /mnt/m2_filesystem/dev/pts  || true
umount /mnt/m2_filesystem/proc || true
umount /mnt/m2_filesystem/sys || true
umount /mnt/m2_filesystem/run || true

echo "rm -rf the following:"
find "$LFS_M2_FILESYSTEM" \
  -maxdepth 1 -mindepth 1 \
  ! -name "LFS11" \
  -print \
  \( -exec rm -rf {} \; -o -quit \)

chown "$USERNAME":"$USERNAME" "$LFS_M2_FILESYSTEM"
chmod 0755 "$LFS_M2_FILESYSTEM"

set +x
