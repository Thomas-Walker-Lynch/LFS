#!/bin/bash
# This might require sudo_LFS depending on the stage in the build that it is run at.
# This is dangerous. This is the kind of thing that causes a person to use an emulated m1 machine.
# set -x

if [[ "$LFS_ENV" != "m1_root" ]];then
  echo $(basename "$0") "only intended to be run in env_m1_root"
  exit 1
fi

echo "\$LFS_M2_FILESYSTEM:" "$LFS_M2_FILESYSTEM"
read -p "Remove all files on $LFS_M2_FILESYSTEM? [y|n]:" -n 1 -r
echo    # (optional) move to a new line
if [[ ! "$REPLY" =~ ^[y]$ ]];then
  exit 1
fi

# found that the absolute pathname is necessary, independent of the current pwd
umount /mnt/m2_filesystem/mnt/Lustucru || true
rmdir -v /mnt/m2_filesystem/mnt/Lustucru || true

umount -v $LFS_M2_FILESYSTEM/dev/pts || true
umount -v $LFS_M2_FILESYSTEM/{sys,proc,run,dev} || true

# skip /mnt just in case it did not unmount (has happened ...)
echo "rm -rf the following:"
find "$LFS_M2_FILESYSTEM" \
  -maxdepth 1 -mindepth 1 \
  ! -name "mnt" \
  -print \
  \( -exec rm -rf {} \; -o -quit \)

rmdir -v "$LFS_M2_FILESYSTEM"/mnt

chown "$USERNAME":"$USERNAME" "$LFS_M2_FILESYSTEM"
chmod 0755 "$LFS_M2_FILESYSTEM"

# set +x
