#!/bin/bash

if [[ "$LFS_ENV" != "m1" ]];then
  echo $(basename "$0") "must be run in env_m1"
  exit 1
fi

patch_dir="$REPO_DIR/user/build/upstream/patch"
mkdir -p "$patch_dir"
pushd "$patch_dir"

link="
https://www.linuxfromscratch.org/patches/lfs/11.1/binutils-2.38-lto_fix-1.patch
https://www.linuxfromscratch.org/patches/lfs/11.1/bzip2-1.0.8-install_docs-1.patch
https://www.linuxfromscratch.org/patches/lfs/11.1/coreutils-9.0-i18n-1.patch
https://www.linuxfromscratch.org/patches/lfs/11.1/coreutils-9.0-chmod_fix-1.patch
https://www.linuxfromscratch.org/patches/lfs/11.1/glibc-2.35-fhs-1.patch
https://www.linuxfromscratch.org/patches/lfs/11.1/kbd-2.4.0-backspace-1.patch
https://www.linuxfromscratch.org/patches/lfs/11.1/perl-5.34.0-upstream_fixes-1.patch
https://www.linuxfromscratch.org/patches/lfs/11.1/sysvinit-3.01-consolidated-1.patch
"

IFS=$'\n'; for l in $link;do
  #   wget -nv $l
  curl -LOfsS $l           
done

# wonder if we can just dump the wget errors to stderr directly from the commands, or if it does already
#  grep -iE 'error|warning|not found' wget-log* 1>&2


popd



