#!/bin/bash
#
#  This script must be sourced, because it sets UUID an possibly NODE environment variables.
#
#  If given a device argument that is used.  Otherwise LFS_M2_EFI_NODE and LFS_FS_NODE are used.
#

err_0=0
if ! (return 0 2>/dev/null); then
  echo $(basename "$0") must be sourced, not executed, so that it may update LFS_M2_EFI_UUID and LFS_M2_FS_UUID.
  err_0=1
fi

err_1=0
if [[ "$LFS_ENV" != "m1_root" ]];then
  echo $(basename "$0") must be run in env_m1_root
  err_1=1
fi

test $err_0 -eq 1 && exit 1
test $err_1 -eq 1 && return 1

if [[ ! -z "$1" ]];then
  ! test -z "$LFS_M2_EFI_NODE" && umount $LFS_M2_EFI_NODE
  ! test -z "$LFS_M2_FS_NODE" && umount $LFS_M2_FS_NODE

  LFS_M2_DEVICE_NODE=$1
  LFS_M2_EFI_NODE="$1"1
  LFS_M2FS_NODE="$1"3
  echo LFS_M2_DEVICE_NODE passed in as: $LFS_M2_DEVICE_NODE
  echo setting LFS_M2_EFI_NODE to: $LFS_M2_EFI_NODE
  echo setting LFS_M2_FS_NODE to: $LFS_M2_FS_NODE
fi

mkfs.ext4 $LFS_M2_FS_NODE
err_mkm2fs=$?

mkfs.msdos $LFS_M2_EFI_NODE
err_mkfsefi=$?

# mount $LFS_M2_FS_NODE then initialize its selinx labels, unmount it
err_test_umount=0
err_sel_label=0
if $LFS_M2_SELINUX && test $err_mkm2fs -eq 0 && test $err_mkfsefi -eq 0;then
  pushd /mnt >& /dev/null
  if tmp_mnt=$(mktemp -d --tmpdir=/mnt);then
    if mount $LFS_M2_FS_NODE $tmp_mnt >& /dev/null && restorecon -R $tmp_mnt;then
      umount $LFS_M2_FS_NODE
      err_test_umount=$?
    fi
    rmdir "$tmp_mnt"
  else
    err_sel_label=1     
  fi
  popd >& /dev/null
fi

if test $err_mkm2fs -ne 0;then
  echo mkfs.ext4 LFS_M2_FS_NODE, $LFS_M2_FS_NODE, failed
  return 1
fi
if test $err_mkfsefi -ne 0;then
  echo mkfs.msdos LFS_M2_EFI_NODE, $LFS_M2_EFI_NODE, failed
  return 2
fi
if test $err_sel_label -ne 0;then
  echo could not set selinux labels for file system
  return 3
fi
if test $err_test_umount -ne 0;then
  echo umount of $tmp_mnt failed
  return 4
fi

# updated UUID numbers for the environment
LFS_M2_EFI_UUID=$(blkid -s UUID $LFS_M2_EFI_NODE | awk '{print $2}' | awk -F  '"' '{print $2}' )
LFS_M2_FS_UUID=$(blkid -s UUID $LFS_M2_FS_NODE | awk '{print $2}' | awk -F  '"' '{print $2}' )

echo new LFS_M2_EFI_UUID: $LFS_M2_EFI_UUID
echo new LFS_M2_FS_UUID: $LFS_M2_FS_UUID

return 0
   
