#!/bin/bash
# https://linuxfromscratch.org/blfs/downloads/stable/BLFS-BOOK-11.1-nochunks.html#grub-efi

if [[ "$LUS_ENV" != "m2" ]];then
  echo $(basename "$0") "must be run in env_m2"
  exit 1
fi

# section: turn off secure boot
echo "make sure secure boot is turned off in the bios settings before booting the m2 device"   

# section: Create an Emergency Boot Disk
# a great idea to protect the build system boot, we should do this.
# requires making a partition on a usb flash drive etc.

# section: Kernel Configuration for UEFI support
#   see efi_linux we build the kernel like this in the first place

# section: Find or Create the EFI System Partition
#   the partitioning stuff is alredy done way up front
#   the mount is part of the script m2fs_mount, so should already be mounted by now
#   mount efi variable fs also already done in m2fs_mount

# section Minimal Boot Configuation
#   seems this does not apply to us

# section Mount the EFI Variable File System
# m2_fs_bind also does this, but m2_fs_bind will not have run as part of a normal build,
# we only run that if we come back later and need to mount an existing build.  I wonder
# if m2_fs_bind will mess up if we haven't build efivars yet.
#
mountpoint /sys/firmware/efi/efivars || mount -v -t efivarfs efivarfs /sys/firmware/efi/efivars

# fstab entry for the efi partition was already made with efi_fstab

# section: Setting Up the Configuration
# this puts files into /boot. This does not write the boot sector, which is
# good because we never told it which device we are targetting.
grub-install --bootloader-id=FS --recheck
# if this works it will say:
# Installing for x86_64-efi platform.
# Installation finished. No error reported.

# echo comforting information for the user:
efibootmgr | cut -f 1

# section: Creating the GRUB Configuration File
#   when grub runs this becomes a boot menu entry
#

cat > /boot/grub/grub.cfg << EOF
# Begin /boot/grub/grub.cfg
set default=0
set timeout=5

insmod part_gpt
insmod ext2
set root=UUID=50e1671c-335a-4289-bc41-c1ddbe3b85cf

if loadfont /boot/grub/fonts/unicode.pf2; then
  set gfxmode=auto
  insmod all_video
  terminal_output gfxterm
fi

menuentry "GNU/Linux, Linux 5.16.9-lfs-11.1"  {
  linux  /boot/vmlinuz-5.16.9-lfs-11.1 root=UUID=50e1671c-335a-4289-bc41-c1ddbe3b85cf
}

menuentry "Firmware Setup" {
  fwsetup
}
EOF

# section Dual-booting with Windows
# info in book, perhaps add this later
